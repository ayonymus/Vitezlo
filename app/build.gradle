apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "org.szvsszke.vitezlo2018"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 15
        versionName "1.1.4"
        multiDexEnabled false
    }

    buildTypes {

        debug {
            // you need to apply your own api key
            resValue "string", "google_maps_api_key", getEnvironmentVariable("MAPS_KEY")
        }
        release {
            resValue "string", "google_maps_api_key", getEnvironmentVariable("MAPS_KEY")
        }
    }

    lintOptions {
        abortOnError true
    }
}


ext {
    appcompat_version = '28.0.0'
    daggerVersion = '2.18'
    junit_version = '4.12'
    mockito_verion = '2.16.0'
    mockitoKotlinVersion = '2.0.0-RC2'
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.gms:play-services-maps:8.4.0'
    implementation 'com.google.maps.android:android-maps-utils:0.4.3'

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_verion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"


    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-alpha-3'
}

static def getEnvironmentVariable(key) {
    def value = System.getenv(key)
    if (value == null)
        throw new GradleException(String.format("Please set %s as environment variable", key))
    return String.format("\"%s\"", value)
}

